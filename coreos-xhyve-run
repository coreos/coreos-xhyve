#!/bin/bash
OPTIND=1
while getopts ":f:" opt; do
  case ${opt} in
    f)
      [[ -r "${OPTARG}" ]] && source "${OPTARG}" || \
        echo "Warning: couldn't read \"${OPTARG}\". Ignoring." >&2
      ;;
    \?)
      echo "Warning: unsupported option '-${OPTARG}'. Ignoring." >&2
      ;;
    :)
      echo "Warning: no cloud-config provided. Ignoring." >&2
    esac
done

XHYVE=${XHYVE:-xhyve}
CHANNEL=${CHANNEL:-alpha}

LATEST=$(ls -r imgs/${CHANNEL}.*.vmlinuz | head -n 1 | sed -e "s,.*${CHANNEL}.,," -e "s,.coreos_.*,,")
if [[ -z ${LATEST} ]]; then
    echo "Error: couldn't find anything to load locally (${CHANNEL} channel)."
    echo "       please run 'coreos-xhyve-fetch' first."
    exit 1
fi
VERSION=${VERSION:-${LATEST}}

CLOUD_CONFIG=${CLOUD_CONFIG:-https://raw.githubusercontent.com/coreos/coreos-xhyve/master/cloud-init/docker-only.txt}
UUID=${UUID:-$(uuidgen)} && UUID="-U ${UUID}"
[[ -n "${SSHKEY}" ]] && SSHKEY="sshkey=\"${SSHKEY}\""

PAYLOAD=${CHANNEL}.${VERSION}.coreos_production_pxe
VMLINUZ=${PAYLOAD}.vmlinuz
INITRD=${PAYLOAD}_image.cpio.gz

CMDLINE="earlyprintk=serial console=ttyS0 ${SSHKEY} coreos.autologin"
CMDLINE="${CMDLINE} cloud-config-url=${CLOUD_CONFIG}"

MEMORY=${MEMORY:-1024}
MEM="-m ${MEMORY}M"
CPUS=${CPUS:-1}
SMP="-c ${CPUS} -A"
NET="-s 2:0,virtio-net"
PCI_DEV="-s 0:0,hostbridge -s 31,lpc"
LPC_DEV="-l com1,stdio"
EXTRA_ARGS=${EXTRA_ARGS}

sudo ${XHYVE} $MEM $SMP $PCI_DEV $LPC_DEV $NET $IMG_HDD $UUID $EXTRA_ARGS -f kexec,imgs/$VMLINUZ,imgs/$INITRD,"$CMDLINE"
